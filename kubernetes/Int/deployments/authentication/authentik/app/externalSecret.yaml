---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: authentik-values
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  target:
    name: authentik-values
    template:
      engineVersion: v2
      data:
        values.yaml: |
            authentik:
                secret_key: "{{ .secretKey }}"
                error_reporting:
                    enabled: true
                postgresql:
                    host: "authentik-cnpg-db-rw"
                    name: "app"
                    user: "app"
                    password: "{{ .databasePassword }}"
                email:
                    host: "smtp.gmail.com"
                    port: 587
                    username: "{{ .smtpUsername }}"
                    password: "{{ .smtpPassword }}"
                    use_tls: false
                    use_ssl: false
                    timeout: 30
                    from: "{{ .emailFrom }}"
            server:
                ingress:
                    ingressClassName: ingress-nginx
                    enabled: true
                    hosts:
                        - "{{ .externalHostname }}"
                        - "{{ .internalHostname }}"
            postgresql:
                enabled: false
            redis:
                enabled: true
                persistence:
                  enabled: true
                  existingClaim: authentik
                  subpath: redis 
  dataFrom:
    - extract:
        key: authentik
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: authentik-db-secrets
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  target:
    name: authentik-db-secrets
    template:
      engineVersion: v2
      data:
        username: app
        password: "{{ .databasePassword }}"
  dataFrom:
    - extract:
        key: authentik