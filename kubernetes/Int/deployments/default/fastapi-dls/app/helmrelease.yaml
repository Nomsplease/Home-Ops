---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app fastapi-dls
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  values:
    controllers:
      fastapi-dls:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: collinwebdesigns/fastapi-dls
              tag: 1.4.0
            env:
              - name: TZ
                value: America/New_York
              - name: DLS_PORT
                value: "443"
              - name: LEASE_EXPIRE_DAYS
                value: "90"
              - name: DEBUG
                value: "false"
              - name: DLS_URL
                value: "{{ .URL }}"
              - name: DATABASE
                value: sqlite:////app/database/db.sqlite
              - name: INSTANCE_KEY_RSA
                value: /app/cert/instance/instance.private.pem
              - name: INSTANCE_KEY_PUB
                value: /app/cert/instance/instance.public.pem
            envFrom:
              - secretRef:
                  name: "${APP}-env"
            probes:
              liveness: &app-probes
                enabled: true
                custom: true
                spec:
                  tcpSocket:
                    port: &app-port 443
                  failureThreshold: 6
                  periodSeconds: 10
              readiness: *app-probes
              startup: *app-probes
            resources:
              requests:
                cpu: 47m
                memory: 128Mi
              limits:
                memory: 500Mi

    service:
      app:
        nameOverride: *app
        controller: *app
        ports:
          http:
            port: *app-port

    ingress:
      app:
        enabled: true
        className: "ingress-nginx"
        hosts:
          - host: fastapi-dls.svc.noms.tv
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    persistence:
      config:
        existingClaim: "${APP}"
        advancedMounts:
          fastapi-dls:
            app:
              - path: /app/cert/instance
                subPath: instanceCerts
              - path: /app/database
                subPath: database
      certs:
        type: secret
        name: production-tls
        defaultMode: 0400
        advancedMounts:
          fastapi-dls:
            app:
              - path: /app/cert/webserver.crt
                subPath: tls.crt
              - path: /app/cert/webserver.key
                subPath: tls.key