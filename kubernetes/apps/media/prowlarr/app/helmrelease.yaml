---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: prowlarr
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: prowlarr
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      prowlarr:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/prowlarr
              tag: 2.1.5.5213@sha256:52b40a9147d4056d8c5edc535adddad32da282df4c3099321378e40dbfcf898a
            env:
              TZ: America/New_York
              PROWLARR__AUTHENTICATION__METHOD: External
              PROWLARR__AUTHENTICATION__REQUIRED: DisabledForLocalAddresses
              PROWLARR__INSTANCENAME: Prowlarr
              PROWLARR__SERVER__PORT: &port 80
              PROWLARR__POSTGRES__HOST: pooler-main-rw.databases
              PROWLARR__POSTGRES__MAINDB: "{{ .Release.Name }}"
              PROWLARR__POSTGRES__PORT: "5432"
              PROWLARR__LOG__LEVEL: info
              PROWLARR__LOG__DBENABLED: 'false'
              PROWLARR__THEME: dark
              PROWLARR__UPDATE__BRANCH: develop
            envFrom:
              - secretRef:
                  name: "{{ .Release.Name }}-secret"
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        ports:
          http:
            port: *port
    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.noms.tv"
        parentRefs:
          - name: envoy
            namespace: network
            sectionName: https
    persistence:
      config:
        existingClaim: "{{ .Release.Name }}"
      tmp:
        type: emptyDir