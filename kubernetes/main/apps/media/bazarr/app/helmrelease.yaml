---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app bazarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  values:
    controllers:
      bazarr:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: linuxserver/bazarr
              tag: 1.4.5
            env:
              - name: TZ
                value: America/New_York
            envFrom:
              - secretRef:
                  name: bazarr-env
            probes:
              liveness: &app-probes
                enabled: true
                custom: true
                spec:
                  tcpSocket:
                    port: &app-port 6767
                  failureThreshold: 6
                  periodSeconds: 10
              readiness: *app-probes
              startup: *app-probes
            resources:
              requests:
                cpu: 47m
                memory: 1Gi
              limits:
                memory: 4Gi
          subcleaner:
            image:
              repository: registry.k8s.io/git-sync/git-sync
              tag: v4.4.1@sha256:699b654e373f000c356756c24290a6dbb86500934b65ce6093fd92c434c61c6b
            env:
              GITSYNC_REPO: https://github.com/KBlixt/subcleaner
              GITSYNC_REF: master
              GITSYNC_PERIOD: 24h
              GITSYNC_ROOT: /add-ons
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi
          exporter:
            image:
              repository: ghcr.io/onedr0p/exportarr
              tag: v2.0.1
            args:
              - bazarr
            envFrom:
              - secretRef:
                  name: bazarr-env
            probes:
              liveness: &exporter-probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz
                    port: &exporter-port 9707
                  failureThreshold: 6
                  periodSeconds: 10
              readiness: *exporter-probes
              startup: *exporter-probes
    service:
      app:
        nameOverride: bazarr
        controller: *app
        ports:
          http:
            port: *app-port
      exporter:
        nameOverride: bazarr-exporter
        controller: *app
        ports:
          http:
            port: *exporter-port
    serviceMonitor:
      exporter:
        enabled: true
        serviceName: bazarr
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
    ingress:
      app:
        enabled: true
        className: "ingress-nginx"
        annotations:
          nginx.ingress.kubernetes.io/auth-url: |-
            http://ak-outpost-authentik-embedded-outpost.authentication.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-snippet: |-
            proxy_set_header X-Forwarded-Host $http_host;
          nginx.ingress.kubernetes.io/auth-response-headers: |-
            Authorization,Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-signin: |-
              https://bazarr.noms.tv/outpost.goauthentik.io/start?rd=$escaped_request_uri
        hosts:
          - host: bazarr.noms.tv
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    persistence:
      add-ons:
        type: emptyDir
      cache:
        type: emptyDir
        globalMounts:
          - path: /config/cache
      config:
        existingClaim: bazarr
      log:
        type: emptyDir
        globalMounts:
          - path: /config/log
      media:
        type: nfs
        server: 172.16.1.10
        path: /mnt/BigPool/Media
        globalMounts:
          - path: /PlexMedia
      # scripts:
      #   type: configMap
      #   name: bazarr-scripts
      #   defaultMode: 0775
      #   globalMounts:
      #     - readOnly: true
      tmp:
        type: emptyDir