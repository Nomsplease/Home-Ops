---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app prowlarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  values:
    controllers:
      prowlarr:
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            image:
              repository: lscr.io/linuxserver/prowlarr
              tag: 1.35.1
            env:
              - name: TZ
                value: America/New_York
            probes:
              liveness: &app-probes
                enabled: true
                custom: true
                spec:
                  tcpSocket:
                    port: &app-port 9696
                  failureThreshold: 6
                  periodSeconds: 10
              readiness: *app-probes
              startup: *app-probes
            resources:
              requests:
                cpu: 47m
                memory: 1Gi
              limits:
                memory: 4Gi

      exporter:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          exporter:
            image:
              repository: ghcr.io/onedr0p/exportarr
              tag: v2.0.1
            args:
              - prowlarr
            envFrom:
              - secretRef:
                  name: "${APP}-exporter-env"
            probes:
              liveness: &exporter-probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz
                    port: &exporter-port 9707
                  failureThreshold: 6
                  periodSeconds: 10
              readiness: *exporter-probes
              startup: *exporter-probes

    service:
      app:
        nameOverride: *app
        controller: *app
        ports:
          http:
            port: *app-port
      exporter:
        nameOverride: "${APP}-exporter"
        controller: exporter
        ports:
          http:
            port: *exporter-port
    
    serviceMonitor:
      exporter:
        enabled: true
        serviceName: "${APP}-exporter"
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s

    ingress:
      app:
        enabled: true
        className: "ingress-nginx"
        annotations:
          nginx.ingress.kubernetes.io/auth-url: |-
            http://ak-outpost-authentik-embedded-outpost.authentication.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-snippet: |-
            proxy_set_header X-Forwarded-Host $http_host;
          nginx.ingress.kubernetes.io/auth-response-headers: |-
            Authorization,Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-signin: |-
              https://prowlarr.noms.tv/outpost.goauthentik.io/start?rd=$escaped_request_uri
        hosts:
          - host: prowlarr.noms.tv
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    persistence:
      config:
        existingClaim: "${APP}"
        advancedMounts:
          prowlarr:
            app:
              - path: /config